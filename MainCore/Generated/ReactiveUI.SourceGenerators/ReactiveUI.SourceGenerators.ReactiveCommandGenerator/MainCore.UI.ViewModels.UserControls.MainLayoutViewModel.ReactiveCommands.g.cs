// <auto-generated/>

#pragma warning disable
#nullable enable

namespace MainCore.UI.ViewModels.UserControls
{
    /// <summary>
    /// Partial class for the MainLayoutViewModel which contains ReactiveUI ReactiveCommand initialization.
    /// </summary>
    public partial class MainLayoutViewModel
    {
        [global::System.CodeDom.Compiler.GeneratedCode("ReactiveUI.SourceGenerators.ReactiveCommandGenerator", "2.1.0.0")]
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _addAccountCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> AddAccountCommand { get => _addAccountCommand ??= ReactiveUI.ReactiveCommand.Create(AddAccount, _canExecute); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _addAccountsCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> AddAccountsCommand { get => _addAccountsCommand ??= ReactiveUI.ReactiveCommand.Create(AddAccounts, _canExecute); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _deleteAccountCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> DeleteAccountCommand { get => _deleteAccountCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(DeleteAccount, _canExecute); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _loginCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> LoginCommand { get => _loginCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Login, _canExecute); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _logoutCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> LogoutCommand { get => _logoutCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Logout, _canExecute); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _pauseCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> PauseCommand { get => _pauseCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Pause, _canExecute); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _restartCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> RestartCommand { get => _restartCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Restart, _canExecute); }
        private ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, global::MainCore.Enums.StatusEnums>? _getStatusCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, global::MainCore.Enums.StatusEnums> GetStatusCommand { get => _getStatusCommand ??= ReactiveUI.ReactiveCommand.Create<global::MainCore.Entities.AccountId, global::MainCore.Enums.StatusEnums>(GetStatus); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>>? _loadAccountCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>> LoadAccountCommand { get => _loadAccountCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(LoadAccount); }
        private ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, global::MainCore.UI.Models.Output.ListBoxItem>? _getAccountCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, global::MainCore.UI.Models.Output.ListBoxItem> GetAccountCommand { get => _getAccountCommand ??= ReactiveUI.ReactiveCommand.Create<global::MainCore.Entities.AccountId, global::MainCore.UI.Models.Output.ListBoxItem>(GetAccount); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, string>? _loadVersionCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, string> LoadVersionCommand { get => _loadVersionCommand ??= ReactiveUI.ReactiveCommand.Create(LoadVersion); }
    }
}
#nullable restore
#pragma warning restore