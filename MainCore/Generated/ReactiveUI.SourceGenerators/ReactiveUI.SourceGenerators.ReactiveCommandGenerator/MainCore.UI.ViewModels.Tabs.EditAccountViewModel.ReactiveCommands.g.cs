// <auto-generated/>

#pragma warning disable
#nullable enable

namespace MainCore.UI.ViewModels.Tabs
{
    /// <summary>
    /// Partial class for the EditAccountViewModel which contains ReactiveUI ReactiveCommand initialization.
    /// </summary>
    public partial class EditAccountViewModel
    {
        [global::System.CodeDom.Compiler.GeneratedCode("ReactiveUI.SourceGenerators.ReactiveCommandGenerator", "2.1.0.0")]
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _addAccessCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> AddAccessCommand { get => _addAccessCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(AddAccess); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _editAccessCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> EditAccessCommand { get => _editAccessCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(EditAccess); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _deleteAccessCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> DeleteAccessCommand { get => _deleteAccessCommand ??= ReactiveUI.ReactiveCommand.Create(DeleteAccess); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _editAccountCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> EditAccountCommand { get => _editAccountCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(EditAccount); }
        private ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, global::MainCore.DTO.AccountDto>? _loadAccountCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, global::MainCore.DTO.AccountDto> LoadAccountCommand { get => _loadAccountCommand ??= ReactiveUI.ReactiveCommand.Create<global::MainCore.Entities.AccountId, global::MainCore.DTO.AccountDto>(LoadAccount); }
    }
}
#nullable restore
#pragma warning restore