// <auto-generated/>

#pragma warning disable
#nullable enable

namespace MainCore.UI.ViewModels.Tabs
{
    /// <summary>
    /// Partial class for the DebugViewModel which contains ReactiveUI ReactiveCommand initialization.
    /// </summary>
    public partial class DebugViewModel
    {
        [global::System.CodeDom.Compiler.GeneratedCode("ReactiveUI.SourceGenerators.ReactiveCommandGenerator", "2.1.0.0")]
        private ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.TaskItem>>? _loadTaskCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.TaskItem>> LoadTaskCommand { get => _loadTaskCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask<global::MainCore.Entities.AccountId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.TaskItem>>(LoadTask); }
        private ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, string>? _loadLogCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, string> LoadLogCommand { get => _loadLogCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask<global::MainCore.Entities.AccountId, string>(LoadLog); }
        private ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, string>? _loadEndpointAddressCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.Entities.AccountId, string> LoadEndpointAddressCommand { get => _loadEndpointAddressCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask<global::MainCore.Entities.AccountId, string>(LoadEndpointAddress); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _leftCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> LeftCommand { get => _leftCommand ??= ReactiveUI.ReactiveCommand.Create(Left); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _rightCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> RightCommand { get => _rightCommand ??= ReactiveUI.ReactiveCommand.Create(Right); }
    }
}
#nullable restore
#pragma warning restore