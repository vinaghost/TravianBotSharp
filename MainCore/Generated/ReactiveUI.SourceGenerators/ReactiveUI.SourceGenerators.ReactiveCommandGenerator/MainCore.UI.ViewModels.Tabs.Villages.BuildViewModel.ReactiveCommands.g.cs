// <auto-generated/>

#pragma warning disable
#nullable enable

namespace MainCore.UI.ViewModels.Tabs.Villages
{
    /// <summary>
    /// Partial class for the BuildViewModel which contains ReactiveUI ReactiveCommand initialization.
    /// </summary>
    public partial class BuildViewModel
    {
        [global::System.CodeDom.Compiler.GeneratedCode("ReactiveUI.SourceGenerators.ReactiveCommandGenerator", "2.1.0.0")]
        private ReactiveUI.ReactiveCommand<global::MainCore.Entities.VillageId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>>? _loadBuildingCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.Entities.VillageId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>> LoadBuildingCommand { get => _loadBuildingCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask<global::MainCore.Entities.VillageId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>>(LoadBuilding); }
        private ReactiveUI.ReactiveCommand<global::MainCore.Entities.VillageId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>>? _loadQueueCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.Entities.VillageId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>> LoadQueueCommand { get => _loadQueueCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask<global::MainCore.Entities.VillageId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>>(LoadQueue); }
        private ReactiveUI.ReactiveCommand<global::MainCore.Entities.VillageId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>>? _loadJobCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.Entities.VillageId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>> LoadJobCommand { get => _loadJobCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask<global::MainCore.Entities.VillageId, global::System.Collections.Generic.List<global::MainCore.UI.Models.Output.ListBoxItem>>(LoadJob); }
        private ReactiveUI.ReactiveCommand<global::MainCore.UI.Models.Output.ListBoxItem, global::System.Collections.Generic.List<global::MainCore.Common.Enums.BuildingEnums>>? _loadBuildNormalCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::MainCore.UI.Models.Output.ListBoxItem, global::System.Collections.Generic.List<global::MainCore.Common.Enums.BuildingEnums>> LoadBuildNormalCommand { get => _loadBuildNormalCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask<global::MainCore.UI.Models.Output.ListBoxItem, global::System.Collections.Generic.List<global::MainCore.Common.Enums.BuildingEnums>>(LoadBuildNormal); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _buildNormalCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> BuildNormalCommand { get => _buildNormalCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(BuildNormal); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _upgradeOneLevelCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> UpgradeOneLevelCommand { get => _upgradeOneLevelCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(UpgradeOneLevel); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _upgradeMaxLevelCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> UpgradeMaxLevelCommand { get => _upgradeMaxLevelCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(UpgradeMaxLevel); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _buildResourceCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> BuildResourceCommand { get => _buildResourceCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(BuildResource); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _upCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> UpCommand { get => _upCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Up); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _downCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> DownCommand { get => _downCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Down); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _topCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> TopCommand { get => _topCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Top); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _bottomCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> BottomCommand { get => _bottomCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Bottom); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _deleteCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> DeleteCommand { get => _deleteCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Delete); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _deleteAllCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> DeleteAllCommand { get => _deleteAllCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(DeleteAll); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _importCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> ImportCommand { get => _importCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Import); }
        private ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit>? _exportCommand;

        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public ReactiveUI.ReactiveCommand<global::System.Reactive.Unit, global::System.Reactive.Unit> ExportCommand { get => _exportCommand ??= ReactiveUI.ReactiveCommand.CreateFromTask(Export); }
    }
}
#nullable restore
#pragma warning restore