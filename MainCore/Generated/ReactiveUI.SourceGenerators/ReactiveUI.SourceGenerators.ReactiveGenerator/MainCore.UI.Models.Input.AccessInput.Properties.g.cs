// <auto-generated/>
using ReactiveUI;

#pragma warning disable
#nullable enable

namespace MainCore.UI.Models.Input
{
    /// <summary>
    /// Partial class for the AccessInput which contains ReactiveUI Reactive property initialization.
    /// </summary>
    public partial class AccessInput
    {
        [global::System.CodeDom.Compiler.GeneratedCode("ReactiveUI.SourceGenerators.ReactiveGenerator", "2.1.0.0")]
        
        /// <inheritdoc cref="_username"/>
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string Username
        { 
            get => _username;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("_username")]
            set => this.RaiseAndSetIfChanged(ref _username, value);
        }
        
        /// <inheritdoc cref="_password"/>
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string Password
        { 
            get => _password;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("_password")]
            set => this.RaiseAndSetIfChanged(ref _password, value);
        }
        
        /// <inheritdoc cref="_proxyHost"/>
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string ProxyHost
        { 
            get => _proxyHost;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("_proxyHost")]
            set => this.RaiseAndSetIfChanged(ref _proxyHost, value);
        }
        
        /// <inheritdoc cref="_proxyPort"/>
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public int ProxyPort { get => _proxyPort; set => this.RaiseAndSetIfChanged(ref _proxyPort, value); }
        
        /// <inheritdoc cref="_proxyUsername"/>
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string ProxyUsername
        { 
            get => _proxyUsername;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("_proxyUsername")]
            set => this.RaiseAndSetIfChanged(ref _proxyUsername, value);
        }
        
        /// <inheritdoc cref="_proxyPassword"/>
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string ProxyPassword
        { 
            get => _proxyPassword;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("_proxyPassword")]
            set => this.RaiseAndSetIfChanged(ref _proxyPassword, value);
        }
        
        /// <inheritdoc cref="_useragent"/>
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string Useragent
        { 
            get => _useragent;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("_useragent")]
            set => this.RaiseAndSetIfChanged(ref _useragent, value);
        }
        
        /// <inheritdoc cref="_lastUsed"/>
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.DateTime LastUsed { get => _lastUsed; set => this.RaiseAndSetIfChanged(ref _lastUsed, value); }
    }
}
#nullable restore
#pragma warning restore