//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the StronglyTypedId source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

namespace MainCore.Entities
{
    readonly partial struct VillageId : System.IComparable<VillageId>, System.IEquatable<VillageId>
    {
        public int Value { get; }

        public VillageId(int value)
        {
            Value = value;
        }

        public static readonly VillageId Empty = new VillageId(0);

        public bool Equals(VillageId other) => this.Value.Equals(other.Value);
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            return obj is VillageId other && Equals(other);
        }

        public override int GetHashCode() => Value.GetHashCode();

        public override string ToString() => Value.ToString();
        public static bool operator ==(VillageId a, VillageId b) => a.Equals(b);
        public static bool operator !=(VillageId a, VillageId b) => !(a == b);
        public int CompareTo(VillageId other) => Value.CompareTo(other.Value);
    }
}
